- hosts: guests:extras
#- hosts: extras
  become: yes
  become_user: isucon
  gather_facts: no
  tasks:
    - name: bundle install
      shell: cd /home/isucon/private_isu/webapp/ruby; bash -lc "bundle install"

- hosts: guests:extras
#- hosts: extras
  become: yes
  become_user: isucon
  gather_facts: no
  tasks:
    - name: go build
      shell: cd /home/isucon/private_isu/webapp/golang; bash -lc "./setup.sh"

- hosts: guests:extras
  become: yes
  gather_facts: no
  tasks:
    - name: Download Composer installer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php
      tags:
        - composer

    - name: Verify Composer installer
      shell: |
        HASH=$(wget -q -O - https://composer.github.io/installer.sig)
        php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); } echo PHP_EOL;"
      register: composer_setup_verify
      changed_when: "'Installer corrupt' not in composer_setup_verify.stdout"
      tags:
        - composer

    - name: Install Composer
      environment:
        HOME: /home/isucon
      shell: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      when: "'Installer verified' in composer_setup_verify.stdout"
      tags:
        - composer

    - name: Cleanup Composer installer
      file:
        path: /tmp/composer-setup.php
        state: absent
      tags:
        - composer

- hosts: guests:extras
  become: yes
  become_user: isucon
  gather_facts: no
  tasks:
    - name: composer install
      shell: cd /home/isucon/private_isu/webapp/php; bash -lc "composer install"
      tags:
        - composer

- hosts: guests:extras
  become: yes
  become_user: isucon
  gather_facts: no
  tasks:
    - name: npm install
      shell: cd /home/isucon/private_isu/webapp/node; bash -lc "npm install"
    - name: build node app
      shell: cd /home/isucon/private_isu/webapp/node; bash -lc "npm run build"
  tags:
    - nodejs

- hosts: guests:extras
  become: yes
  become_user: isucon
  gather_facts: no
  tasks:
    - name: Create Python virtualenv
      shell: /home/isucon/.local/python/bin/python3 -m venv .venv
      args:
        chdir: /home/isucon/private_isu/webapp/python
        creates: /home/isucon/private_isu/webapp/python/.venv/bin/activate
      tags:
        - python3
    - name: Bootstrap pip in the virtualenv
      shell: .venv/bin/python -m ensurepip --upgrade
      args:
        chdir: /home/isucon/private_isu/webapp/python
        creates: /home/isucon/private_isu/webapp/python/.venv/bin/pip
      tags:
        - python3
    - name: Install UV CLI into virtualenv
      pip:
        virtualenv: /home/isucon/private_isu/webapp/python/.venv
        name:
          - uv
      args:
        chdir: /home/isucon/private_isu/webapp/python
      tags:
        - python3

    - name: Sync Python dependencies via UV
      shell: /home/isucon/private_isu/webapp/python/.venv/bin/uv sync --compile-bytecode
      args:
        chdir: /home/isucon/private_isu/webapp/python
      tags:
        - python3

- hosts: guests:extras
  become: yes
  gather_facts: yes
  tasks:
    - copy: src=../files/home/isucon/env.sh dest=/home/isucon/env.sh owner=isucon mode=644
    - name: ruby (systemd)
      copy: src=../files/etc/systemd/system/isu-ruby.service dest=/etc/systemd/system/isu-ruby.service owner=root mode=644
    - name: go app (systemd)
      copy: src=../files/etc/systemd/system/isu-go.service dest=/etc/systemd/system/isu-go.service owner=root mode=644
    - name: node app (systemd)
      copy: src=../files/etc/systemd/system/isu-node.service dest=/etc/systemd/system/isu-node.service owner=root mode=644
      tags:
        - nodejs
    - name: python app (systemd)
      copy:
        src: ../files/etc/systemd/system/isu-python.service
        dest: /etc/systemd/system/isu-python.service
        owner: root
        mode: 0644
      tags:
        - python3
    - name: php app (systemd)
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"
      lineinfile:
        path: /lib/systemd/system/php8.3-fpm.service
        line: 'EnvironmentFile=/home/isucon/env.sh'
        insertafter: 'ExecReload=.*'
    - name: php app (systemd)
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "22.04"
      lineinfile:
        path: /lib/systemd/system/php8.1-fpm.service
        line: 'EnvironmentFile=/home/isucon/env.sh'
        insertafter: 'ExecReload=.*'
    - name: reload daemon config
      shell: systemctl daemon-reload
    - name: default application selection
      service: name=isu-ruby state=started enabled=true
